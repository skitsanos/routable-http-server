/**
 * Application Core
 * Created by skitsanos on 12/03/15.
 */
var fs = require('fs');
var url = require('url');
var mime = require('mime');

var app = (function ()
{
	var _app = this;
	var _basedir = __dirname + '/../..';

	return {
		title: 'routable-http-server, v.2.*',

		request: null,
		response: null,

		api: {},

		config: {
			htmlDir: _basedir,
			enableWebsockets: false
		},

		io: {
			basedir: _basedir,

			readFile: function (path, options)
			{
				return fs.readFileSync(path);
			},

			fileExists: function (path)
			{
				return fs.existsSync(path);
			},

			fileExtension: function (filename)
			{
				var ext = path.extname(filename || '').split('.');
				return ext[ext.length - 1];
			}
		},

		utils: {
			serveContent: function (path, contentType)
			{
				if(arguments.length==1)
				{
					//assume Content-Type from file we are serving
					contentType = mime.lookup(path);
				}

				if(fs.existsSync(path))
				{
					var body = app.io.readFile(path);

					app.response.writeHead(200, {
						'Content-Length': body.length,
						'Content-Type': contentType
					});
					app.response.write(body);
					app.response.end();
				}
				else
				{
					app.utils.serveError(404, 'Not Found');
				}
			},

			serveRAW: function (data, contentType)
			{
				app.response.writeHead(200, {
					'Content-Type': contentType
				});
				app.response.write(data);
				app.response.end();
			},

			serveJson: function (type, content)
			{
				app.utils.serveRAW(JSON.stringify({type: type, result: content}), 'application/json');
			},

			serveError: function (code, message)
			{
				app.response.writeHead(code, {
					'Content-Length': message.length,
					'Content-Type': 'text/html'
				});
				app.response.write(message);
				app.response.end();
			},

			getRandomPassword: function (length)
			{
				var chars = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890";
				var pass = '';
				for (var i = 0; i < length; ++i)
				{
					var x = Math.floor(Math.random() * 62);
					pass += chars.charAt(x);
				}
				return pass;
			}
		},

		router: null
	}
})();

module.exports = app;
